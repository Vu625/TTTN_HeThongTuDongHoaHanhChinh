# import streamlit as st
# from services.auth_service import check_role, logout
# from services.data_viz_service import load_applications
#
# check_role("officer")
# if st.sidebar.button("ƒêƒÉng xu·∫•t"):
#     logout()
# st.title("üì• Danh s√°ch h·ªì s∆° ch·ªù x·ª≠ l√Ω")
#
# apps = load_applications()
#
# if not apps:
#     st.info("Ch∆∞a c√≥ h·ªì s∆° n√†o")
# else:
#     for a in apps:
#         st.write(f"""
#             **M√£ h·ªì s∆°**: {a['application_id']}
#             **Ng∆∞·ªùi n·ªôp**: {a['citizen_id']}
#             **Th·ªß t·ª•c**: {a['form_template_id']}
#             **Ng√†y g·ª≠i**: {a['submitted_at']}
#             **Tr·∫°ng th√°i**: {a['status']}
#         """)


import streamlit as st
from services.auth_service import check_role
from services.data_viz_service import load_applications, save_applications
from services.ocr_service import extract_text
from pathlib import Path

check_role("officer")
st.title("üßæ X·ª≠ l√Ω h·ªì s∆° c√¥ng d√¢n")
#from models.ocr.tessdata import config
# try:
#     from . import config # Gi·∫£ ƒë·ªãnh c·∫•u tr√∫c th∆∞ m·ª•c
#     # Ho·∫∑c ƒë·∫£m b·∫£o config ƒë∆∞·ª£c ch·∫°y ·ªü ƒëi·ªÉm kh·ªüi ƒë·∫ßu ·ª©ng d·ª•ng
# except ImportError:
#     # X·ª≠ l√Ω n·∫øu c·∫•u h√¨nh kh√¥ng t√¨m th·∫•y, nh∆∞ng trong d·ª± √°n n√†y n√™n l√† b·∫Øt bu·ªôc
#     pass

apps = load_applications()

if not apps:
    st.info("Ch∆∞a c√≥ h·ªì s∆° n√†o ƒë∆∞·ª£c g·ª≠i")
else:
    selected = st.selectbox(
        "Ch·ªçn h·ªì s∆° c·∫ßn xem:",
        options=[f"{a['application_id']} - {a['form_template_id']}" for a in apps]
    )

    app = next(a for a in apps if a['application_id'] in selected)

    st.write(f"**Ng∆∞·ªùi n·ªôp:** {app['citizen_id']}")
    st.write(f"**Lo·∫°i th·ªß t·ª•c:** {app['form_template_id']}")
    st.write(f"**Ng√†y g·ª≠i:** {app['submitted_at']}")
    st.write(f"**Tr·∫°ng th√°i hi·ªán t·∫°i:** {app['status']}")
    st.divider()

    st.subheader("üìé T√†i li·ªáu ƒë√≠nh k√®m")

    for doc_path in app["documents"]:
        path = Path(doc_path)
        if not path.exists():
            st.warning(f"Kh√¥ng t√¨m th·∫•y file: {path}")
            continue

        st.image(str(path), caption=path.name, width=400)
        if st.button(f"üîç Ch·∫°y OCR cho {path.name}"):
            text = extract_text(path)
            st.text_area(f"N·ªôi dung OCR ({path.name})", text, height=200)
            if "ocr_texts" not in app:
                app["ocr_texts"] = {}
            app["ocr_texts"][path.name] = text

    st.divider()
    new_status = st.selectbox(
        "C·∫≠p nh·∫≠t tr·∫°ng th√°i h·ªì s∆°:",
        options=["submitted", "verifying", "approved", "rejected"],
        index=["submitted", "verifying", "approved", "rejected"].index(app["status"])
    )

    if st.button("üíæ L∆∞u c·∫≠p nh·∫≠t"):
        app["status"] = new_status
        save_applications(apps)
        st.success("ƒê√£ l∆∞u tr·∫°ng th√°i m·ªõi!")
